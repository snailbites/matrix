/**
  *
  * Buttons    
  *
  */
  
// TODO: find a better home for these imports  
@import "../atoms/units.scss";
@import "../atoms/colors.scss";
    
//
// MIXINS AND FUNCTIONS
// 
// --------------------

// Transition: Sets transition properties on selector
// @param: property, duration, style
@mixin transition($property, $duration, $style: ease) {
  transition-property: #{$property};
  transition-duration: $duration;
  transition-timing-function: $style;
}

// Button Variants: Creates the button and different states for each button
// @param: font color, background color, disabled color
@mixin button-variants($fontColor, $backgroundColor: inherit, $disabledColor: #CCC) {
  color: $fontColor;
  background: $backgroundColor;  

  &:hover,
  &:focus {
    background: darken($backgroundColor, 10%);    
    color: darken($fontColor, 10%);
  }

  &:active {
    background: darken($backgroundColor, 20%);    
    color: darken($fontColor, 20%);
  }

  &:disabled,
  &-disabled,
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active,
    &:active:hover,
    &.active:hover {
      background: $disabledColor;      
      color: $disabledColor;
      cursor: not-allowed;
      pointer-events: none;
    }
  }
}

// Functions
// ...



// Main Button Definition
// Primary button is assumed 
button,  
.be-btn {        
    padding: .3em 1.85em;
    font-size: .75em;    
    display: inline-block;    
    vertical-align: middle;
    white-space: nowrap;
    text-transform: capitalize;
    border: 0 none;
    border-radius: $border-radius-medium;    
    
    color: $color-white;  
    text-align: center;  

    @include button-variants($color-white, $color-primary, transparent);
    @include transition(background, $transition-duration-normal);

    &:hover,
    &:focus,
    &:active,
    &:active:focus {
        cursor: pointer;
        text-decoration: none;
        box-shadow: none;
        outline: none;
    }  
    
    // Variations: these are additional classes onto the 
    // main button styles that modify the component      
    // ----
    &-large {
        padding: .75em 2em;
    }
    
    &-icon {
        & > i[class^="icon"] {            
            height: 16px;
            width: 16px;
            display: inline-block;
            vertical-align: middle;            
            margin-right: .5em;
        }
    }
    
    &-secondary {        
        border: 1px solid #CCC;
        padding: .3em;
                
        @include button-variants($color-black, transparent, transparent);
        
        & > i[class^="icon"] {
            margin-right: 0;                  
        }
        
    }
}


